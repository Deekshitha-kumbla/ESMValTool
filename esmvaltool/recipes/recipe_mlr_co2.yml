# recipe_mlr_co2.yml
---
documentation:

  description: |
    Use MLR (Machine Learning Regression) models to predict future CO2 fluxes.

  authors:
    - schl_ma

  maintainer:
    - schl_ma

  projects:
    - crescendo


DATASET_ANCHOR: &datasets
  - {dataset: bcc-csm1-1}
  - {dataset: bcc-csm1-1-m}
  # - {dataset: BNU-ESM}
  # - {dataset: CanESM2}
  # - {dataset: CCSM4}
  # - {dataset: CESM1-BGC}
  # - {dataset: CESM1-CAM5}
  # - {dataset: CESM1-WACCM, ensemble: r2i1p1}
  # - {dataset: GFDL-ESM2G}
  # - {dataset: GFDL-ESM2M}
  # - {dataset: HadGEM2-CC}
  # - {dataset: HadGEM2-ES}
  # - {dataset: inmcm4}
  # - {dataset: IPSL-CM5A-LR}
  # - {dataset: IPSL-CM5A-MR}
  # - {dataset: IPSL-CM5B-LR}
  # - {dataset: MIROC-ESM}
  # - {dataset: MIROC-ESM-CHEM}
  # - {dataset: NorESM1-M}
  # - {dataset: NorESM1-ME}


preprocessors:

  mask_sea: &mask_sea
    custom_order: true
    regrid:
      scheme: nearest
      target_grid: 2x2
    extract_region:
      start_latitude: -60.0
      end_latitude: 90.0
      start_longitude: 0.0
      end_longitude: 360.0
    mask_landsea:
      mask_out: sea
      always_use_ne_mask: true


diagnostics:

  diag_mlr_input_tas:
    variables:
      features: &variable_settings_features
        short_name: tas
        preprocessor: mask_sea
        project: CMIP5
        mip: Amon
        exp: historical
        ensemble: r1i1p1
        start_year: 1989
        end_year: 2005
        var_type: feature
        additional_datasets: *datasets
      prediction_input: &variable_settings_prediction_input
        <<: *variable_settings_features
        var_type: prediction_input
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: TS4.02, tier: 2}
    scripts:
      monthly_clim: &monthly_clim
        script: mlr/preprocess.py
        aggregate_by:
          month_number: mean
        tag: T
        convert_units_to: celsius

  diag_mlr_input_tas_trend:
    variables:
      features:
        <<: *variable_settings_features
      prediction_input:
        <<: *variable_settings_prediction_input
    scripts:
      monthly_trend: &monthly_trend
        script: mlr/preprocess.py
        aggregate_by:
          month_number: trend
        return_trend_stderr: true
        convert_units_to: celsius yr-1
        tag: T_trend

  diag_mlr_input_pr:
    variables:
      features:
        <<: *variable_settings_features
        short_name: pr
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: pr
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: TS4.02, tier: 2}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: PR
        convert_units_to: kg m-2 day-1

  diag_mlr_input_pr_trend:
    variables:
      features:
        <<: *variable_settings_features
        short_name: pr
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: pr
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: TS4.02, tier: 2}
    scripts:
      monthly_trend:
        <<: *monthly_trend
        tag: PR_trend
        convert_units_to: celsius yr-1

  diag_mlr_input_et:
    variables:
      features:
        <<: *variable_settings_features
        short_name: et
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: et
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LandFlux-EVAL, project: OBS, type: reanaly, version: Oct13, tier: 3}
      prediction_input_error:
        <<: *variable_settings_prediction_input
        short_name: etStderr
        mip: Lmon
        var_type: prediction_input_error
        additional_datasets:
          - {dataset: LandFlux-EVAL, project: OBS, type: reanaly, version: Oct13, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: ET
        convert_units_to: mm day-1

  diag_mlr_input_et_trend:
    variables:
      features:
        <<: *variable_settings_features
        short_name: et
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: et
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LandFlux-EVAL, project: OBS, type: reanaly, version: Oct13, tier: 3}
    scripts:
      monthly_trend:
        <<: *monthly_trend
        tag: ET_trend
        convert_units_to: mm day-1 yr-1

  diag_mlr_input_gpp:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
      prediction_input_error:
        <<: *variable_settings_prediction_input
        short_name: gppStderr
        mip: Lmon
        var_type: prediction_input_error
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP
        convert_units_to: t km-2 yr-1

  diag_mlr_input_gpp_trend:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      monthly_trend:
        <<: *monthly_trend
        tag: GPP_trend
        convert_units_to: t km-2 yr-2

  diag_mlr_input_gpp_ranking:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: May12, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP_RANK
        convert_units_to: no unit
        argsort:
          coord: month_number
          descending: true

  diag_mlr_input_lai:
    variables:
      features:
        <<: *variable_settings_features
        short_name: lai_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: lai_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LAI3g, project: OBS, type: reanaly, version: 1_regridded, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: LAI
        convert_units_to: null

  diag_mlr_input_lai_trend:
    variables:
      features:
        <<: *variable_settings_features
        short_name: lai_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: lai_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LAI3g, project: OBS, type: reanaly, version: 1_regridded, tier: 3}
    scripts:
      monthly_trend:
        <<: *monthly_trend
        tag: LAI_trend
        convert_units_to: yr-1

  diag_mlr_gpp:
    description: Perform MLR on GPP.
    variables:
      label: &variable_settings_label
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        exp: rcp85
        start_year: 2083
        end_year: 2099
        derive: true
        var_type: label
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP
        convert_units_to: t km-2 yr-1
      mlr: &mlr
        script: mlr/main.py
        ancestors: [
          'diag_mlr_gpp/monthly_clim',
          'diag_mlr_input_*/monthly_*',
        ]
        categorical_features: ['longitude', 'month_number']
        coords_as_features: ['month_number', 'latitude', 'longitude']
        estimate_mlr_model_error:
          type: test
        # grid_search_cv_kwargs:
        #   cv: 5
        # grid_search_cv_param_grid:
        #   final__regressor__learning_rate:
        #     [0.1, 0.08, 0.05]
        #   final__regressor__max_depth:
        #     [4, 6, 8]
        group_datasets_by_attributes: ['dataset']
        mlr_model: gbr_xgboost
        model_name: GBRT
        n_jobs: 24
        parameters_final_regressor:
          n_estimators: 20
          subsample: 0.5
          learning_rate: 0.1
          max_depth: 8
        return_lime_importance: true
      postprocess:
        script: mlr/postprocess.py
        ancestors: [
          'diag_mlr_gpp/mlr',
          'diag_mlr_input_gpp/monthly_clim',
        ]
        mean: ['time']
        sum: ['latitude', 'longitude']
        convert_units_to: Gt yr-1

  # diag_mlr_gpp_model_as_truth:
  #   description: Validate MLR using model-as-truth experiment.
  #   scripts:
  #     mlr:
  #       <<: *mlr
  #       model_as_truth: ['dataset']
      # postprocess:
      #   script: mlr/postprocess.py
      #   ancestors: [
      #     'diag_mlr_gpp/mlr',
      #     'diag_mlr_input_gpp/monthly_clim',
      #   ]
      #   mean: ['time']
      #   sum: ['latitude', 'longitude']
      #   convert_units_to: Gt yr-1

  # diag_mmm_gpp:
  #   description: Use simple multi-model mean to predict GPP.
  #   variables:
  #     label:
  #       <<: *variable_settings_label
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: GPP
  #       convert_units_to: t km-2 yr-1
  #     mmm: &mmm
  #       script: mlr/multi_model_mean_regression.py
  #       ancestors: ['diag_mmm_gpp/monthly_clim']
  #       unweighted_mean: true
  #       std: true
