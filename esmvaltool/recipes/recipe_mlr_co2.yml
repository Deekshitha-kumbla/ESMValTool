# recipe_mlr_co2.yml
---
documentation:

  description: |
    Use MLR (Machine Learning Regression) models to predict future CO2 fluxes.

  authors:
    - schl_ma

  maintainer:
    - schl_ma

  projects:
    - crescendo


DATASET_ANCHOR: &datasets
  # - {dataset: bcc-csm1-1}
  # - {dataset: bcc-csm1-1-m}
  - {dataset: BNU-ESM}
  - {dataset: CanESM2}
  - {dataset: CCSM4}
  - {dataset: CESM1-BGC}
  - {dataset: CESM1-CAM5}
  # - {dataset: CESM1-WACCM, ensemble: r2i1p1}
  # - {dataset: GFDL-ESM2G}
  # - {dataset: GFDL-ESM2M}
  # - {dataset: HadGEM2-CC}
  # - {dataset: HadGEM2-ES}
  # - {dataset: inmcm4}
  # - {dataset: IPSL-CM5A-LR}
  # - {dataset: IPSL-CM5A-MR}
  # - {dataset: IPSL-CM5B-LR}
  # - {dataset: MIROC-ESM}
  # - {dataset: MIROC-ESM-CHEM}
  # - {dataset: MPI-ESM-LR}
  # - {dataset: MPI-ESM-MR}
  # - {dataset: NorESM1-M}
  # - {dataset: NorESM1-ME}


preprocessors:

  mask_sea: &mask_sea
    mask_landsea:
      mask_out: sea
    extract_region:
      start_latitude: -60.0
      end_latitude: 90.0
      start_longitude: 0.0
      end_longitude: 360.0

  regrid:
    <<: *mask_sea
    regrid:
      scheme: nearest
      target_grid: 1x1


diagnostics:

  diag_mlr_input_tas:
    variables:
      features: &variable_settings_features
        short_name: tas
        preprocessor: mask_sea
        project: CMIP5
        mip: Amon
        field: T2Ms
        exp: historical
        ensemble: r1i1p1
        start_year: 1989
        end_year: 2005
        var_type: feature
        additional_datasets: *datasets
      prediction_input: &variable_settings_prediction_input
        <<: *variable_settings_features
        preprocessor: regrid
        var_type: prediction_input
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: 1, tier: 3}
    scripts:
      monthly_clim: &monthly_clim
        script: mlr/simple_pp.py
        aggregate_by:
          month_number: mean
        convert_units_to: celsius
        tag: T
        save_ref_data: true

  diag_mlr_input_tas_trend:
    variables:
      features:
        <<: *variable_settings_features
      prediction_input:
        <<: *variable_settings_prediction_input
    scripts:
      monthly_trend: &monthly_trend
        script: mlr/simple_pp.py
        aggregate_by:
          month_number: trend
        convert_units_to: celsius yr-1
        tag: T_trend

  diag_mlr_input_pr:
    variables:
      features:
        <<: *variable_settings_features
        short_name: pr
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: pr
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: 1, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: PR
        convert_units_to: 'kg m-2 day-1'

  diag_mlr_input_et:
    variables:
      features:
        <<: *variable_settings_features
        short_name: et
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: et
        derive: true
        additional_datasets:
          - {dataset: LandFlux-EVAL, project: OBS, type: ground, version: 1, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: ET
        convert_units_to: null

  diag_mlr_input_gpp:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
        start_year: 1997
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        start_year: 1997
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: 1, tier: 2}
      ref_features: &variable_settings_ref_features
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
        start_year: 1989
        end_year: 1996
        ref: true
      ref_prediction_input: &variable_settings_ref_prediction_input
        <<: *variable_settings_features
        short_name: gpp_grid
        preprocessor: regrid
        mip: Lmon
        derive: true
        start_year: 1989
        end_year: 1996
        ref: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: 1, tier: 2}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        anomaly:
          matched_by: ['dataset']
        tag: GPP
        convert_units_to: 't km-2 yr-1'

  diag_mlr_input_gpp_ranking:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: 1, tier: 2}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP_RANK
        convert_units_to: 'no unit'
        argsort:
          coord: month_number
          descending: true

  diag_mlr_input_lai:
    variables:
      features:
        <<: *variable_settings_features
        short_name: lai_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: lai_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LAI3g, project: OBS, type: reanaly, version: 1, tier: 3, var_type: prediction_input}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: LAI
        convert_units_to: null

  diag_mlr_gpp:
    description: Perform MLR on GPP.
    variables:
      label: &variable_settings_label
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        exp: rcp85
        start_year: 2084
        end_year: 2100
        derive: true
        var_type: label
      ref_label: &variable_settings_ref_label
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
        ref: true
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP_change
        convert_units_to: 't km-2 yr-1'
      mlr: &mlr
        script: mlr/main.py
        ancestors: [
          'diag_mlr_gpp/monthly_clim',
          'diag_mlr_input_*/monthly_clim',
          'diag_mlr_input_*/monthly_trend',
        ]
        categorical_features: ['longitude', 'month_number']
        coords_as_features: ['month_number', 'latitude', 'longitude']
        estimate_prediction_error:
          type: test
        # grid_search_cv_kwargs:
        #   cv: 5
        # grid_search_cv_param_grid:
        #   transformed_target_regressor__regressor__learning_rate:
        #     [0.08, 0.05]
        #   transformed_target_regressor__regressor__max_depth:
        #     [6, 8]
        #   transformed_target_regressor__regressor__n_estimators:
        #     [2000, 3000, 4000]
        #   transformed_target_regressor__regressor__subsample:
        #     [0.2, 0.5, 1.0]
        group_datasets_by_attributes: ['dataset']
        mlr_model: gbr_xgboost
        n_jobs: 24
        parameters_final_regressor:
          max_depth: 8
          learning_rate: 0.1
          n_estimators: 300
          subsample: 0.5
        prediction_pp:
          mean: ['time']
          sum: ['latitude', 'longitude']
          units: 'Gt yr-1'
      evaluate_mlr_models: &evaluate
        script: mlr/simple_multimodel_stats.py
        ancestors: ['diag_mlr_gpp/mlr']
        pattern: '*pp.nc'
        pattern_errors: '*pp_error_estim*'
        std: true
        unweighted_mean: true

  diag_mlr_nbp:
    description: Perform MLR on NBP.
    variables:
      label:
        <<: *variable_settings_label
      ref_label:
        <<: *variable_settings_ref_label
        short_name: nbp_grid
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: NBP_change
        convert_units_to: 't km-2 yr-1'
      mlr:
        <<: *mlr
        ancestors: [
          'diag_mlr_nbp/monthly_clim',
          'diag_mlr_input_*/monthly_clim',
        ]
      evaluate_mlr_models:
        <<: *evaluate
        ancestors: ['diag_mlr_nbp/mlr']

  diag_mmm:
    description: Calculate simple multi-model mean of label data.
    variables:
      label:
        <<: *variable_settings_label
      ref_label:
        <<: *variable_settings_ref_label
    scripts:
      global_sum:
        script: mlr/simple_pp.py
        mean: ['time']
        sum: ['latitude', 'longitude']
        anomaly:
          matched_by: ['dataset']
        tag: GPP_change
        convert_units_to: 'Gt yr-1'
      mmm:
        script: mlr/simple_multimodel_stats.py
        ancestors: ['diag_mmm/global_sum']
        unweighted_mean: true
        std: true
