# recipe_mlr_co2.yml
---
documentation:

  description: |
    Use MLR (Machine Learning Regression) models to predict future CO2 fluxes.

  authors:
    - schl_ma

  maintainer:
    - schl_ma

  projects:
    - crescendo


DATASET_ANCHOR: &datasets
  - {dataset: BNU-ESM}
  - {dataset: CanESM2}
  - {dataset: CCSM4}
  - {dataset: CESM1-BGC}
  # # - {dataset: GFDL-ESM2G} (GPP for RCP4.5 missing)
  - {dataset: GFDL-ESM2M}
  # - {dataset: HadGEM2-CC}
  # - {dataset: HadGEM2-ES}
  # - {dataset: inmcm4}
  # - {dataset: IPSL-CM5A-LR}
  # - {dataset: IPSL-CM5A-MR}
  # - {dataset: IPSL-CM5B-LR}
  # - {dataset: MIROC-ESM}
  # - {dataset: MIROC-ESM-CHEM}
  # - {dataset: MPI-ESM-LR}
  # - {dataset: MPI-ESM-MR}
  # - {dataset: NorESM1-M}
  # - {dataset: NorESM1-ME}


preprocessors:

  mask_sea: &mask_sea
    mask_landsea:
      mask_out: sea
    extract_region:
      start_latitude: -60.0
      end_latitude: 90.0
      start_longitude: 0.0
      end_longitude: 360.0

  regrid:
    <<: *mask_sea
    regrid:
      scheme: nearest
      target_grid: 1x1


# features: &variable_settings_features
#   short_name: tas
#   preprocessor: mask_sea
#   project: CMIP5
#   mip: Amon
#   field: T2Ms
#   exp: historical
#   ensemble: r1i1p1
#   start_year: 1991
#   end_year: 2005
#   var_type: feature
#   additional_datasets: *datasets
# prediction_input: &variable_settings_prediction_input
#   <<: *variable_settings_features
#   preprocessor: regrid
#   var_type: prediction_input
#   additional_datasets:
#     - {dataset: CRU, project: OBS, type: reanaly, version: 1, tier: 3}
# monthly_clim: &monthly_clim
#   script: mlr/simple_pp.py
#   aggregate_by:
#     month_number: mean
#   tag: T
#   convert_units_to: celsius


diagnostics:

  diag_mlr_input_tas:
    variables:
      features: &variable_settings_features
        short_name: tas
        preprocessor: mask_sea
        project: CMIP5
        mip: Amon
        field: T2Ms
        exp: historical
        ensemble: r1i1p1
        start_year: 1991
        end_year: 2005
        var_type: feature
        additional_datasets: *datasets
      prediction_input: &variable_settings_prediction_input
        <<: *variable_settings_features
        preprocessor: regrid
        var_type: prediction_input
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: 1, tier: 3}
    scripts:
      monthly_clim: &monthly_clim
        script: mlr/simple_pp.py
        aggregate_by:
          month_number: mean
        tag: T
        convert_units_to: celsius

  diag_mlr_input_pr:
    variables:
      features:
        <<: *variable_settings_features
        short_name: pr
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: pr
        additional_datasets:
          - {dataset: CRU, project: OBS, type: reanaly, version: 1, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: PR
        convert_units_to: 'kg m-2 day-1'

  # No monthly data for prediction input
  # diag_mlr_input_rsds:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: rsds
  #       start_year: 2001
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: rsds
  #       start_year: 2001
  #       additional_datasets:
  #         - {dataset: CERES-EBAF, project: obs4mips, level: L3B, version: Ed2-7, tier: 1}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: SSRD
  #       convert_units_to: null


  # No monthly data for prediction input
  # diag_mlr_input_rsus:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: rsus
  #       start_year: 2001
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: rsus
  #       start_year: 2001
  #       additional_datasets:
  #         - {dataset: CERES-EBAF, project: obs4mips, level: L3B, version: Ed2-7, tier: 1}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: SSRU
  #       convert_units_to: null

  # No monthly data for prediction input
  # diag_mlr_input_rlds:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: rlds
  #       start_year: 2001
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: rlds
  #       start_year: 2001
  #       additional_datasets:
  #         - {dataset: CERES-EBAF, project: obs4mips, level: L3B, version: Ed2-7, tier: 1}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: SLRD
  #       convert_units_to: null

  # No monthly data for prediction input
  # diag_mlr_input_rlus:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: rlus
  #       start_year: 2001
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: rlus
  #       start_year: 2001
  #       additional_datasets:
  #         - {dataset: CERES-EBAF, project: obs4mips, level: L3B, version: Ed2-7, tier: 1}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: SLRU
  #       convert_units_to: null

  diag_mlr_input_et:
    variables:
      features:
        <<: *variable_settings_features
        short_name: et
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: et
        derive: true
        additional_datasets:
          - {dataset: LandFlux-EVAL, project: OBS, type: ground, version: 1, tier: 3}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: ET
        convert_units_to: null

  # No monthly data for prediction input
  # diag_mlr_input_cVeg:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: cVeg_grid
  #       mip: Lmon
  #       derive: true
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: cVeg_grid
  #       mip: Lmon
  #       derive: true
  #       additional_datasets:
  #         - {dataset: NDP, project: OBS, type: ground, version: 017b, tier: 2, start_year: 2000, end_year: 2000}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: CVEG
  #       convert_units_to: 't km-2'

  # No monthly data for prediction input
  # diag_mlr_input_cSoil:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: cSoil_grid
  #       mip: Lmon
  #       derive: true
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: cSoil_grid
  #       mip: Lmon
  #       derive: true
  #       additional_datasets:
  #         - {dataset: HWSD, project: OBS, type: ground, version: 1, tier: 2, start_year: 2000, end_year: 2000}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: CSOIL
  #       convert_units_to: 't km-2'

  # diag_mlr_input_nbp:
  #   variables:
  #     features:
  #       <<: *variable_settings_features
  #       short_name: nbp_grid
  #       mip: Lmon
  #       derive: true
  #     prediction_input:
  #       <<: *variable_settings_prediction_input
  #       short_name: nbp_grid
  #       mip: Lmon
  #       derive: true
  #       additional_datasets:
  #         - {dataset: JMA-TRANSCOM, project: OBS, type: reanaly, version: 1, tier: 3}
  #   scripts:
  #     monthly_clim:
  #       <<: *monthly_clim
  #       tag: NBP
  #       convert_units_to: 't km-2 yr-1'

  diag_mlr_input_gpp:
    variables:
      features:
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: gpp_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: MTE, project: OBS, type: reanaly, version: 1, tier: 2}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: GPP
        convert_units_to: 't km-2 yr-1'

  diag_mlr_input_lai:
    variables:
      features:
        <<: *variable_settings_features
        short_name: lai_grid
        mip: Lmon
        derive: true
      prediction_input:
        <<: *variable_settings_prediction_input
        short_name: lai_grid
        mip: Lmon
        derive: true
        additional_datasets:
          - {dataset: LAI3g, project: OBS, type: reanaly, version: 1, tier: 3, var_type: prediction_input}
    scripts:
      monthly_clim:
        <<: *monthly_clim
        tag: LAI
        convert_units_to: null

  diag_mlr:
    description: Perform MLR on input data.
    variables:
      ref: &variable_settings_ref
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        derive: true
        ref: true
      label: &variable_settings_label
        <<: *variable_settings_features
        short_name: gpp_grid
        mip: Lmon
        exp: rcp45
        start_year: 2021
        end_year: 2035
        derive: true
        var_type: label
    scripts:
      monthly_clim:
        <<: *monthly_clim
        anomaly:
          matched_by: ['dataset']
        tag: GPP_change
        convert_units_to: 't km-2 yr-1'
      mlr:
        script: mlr/main.py
        ancestors: [
          'diag_mlr/monthly_clim',
          'diag_mlr_input_*/monthly_clim',
        ]
        estimate_prediction_error:
          type: test
        group_datasets_by_attributes: ['dataset']
        mlr_model: gbr_xgboost
        # metadata_preselection:
        #   select:
        #     project: CMIP5
        #   group: dataset
        n_jobs: 12
        grid_search_cv_param_grid:
          transformed_target_regressor__regressor__learning_rate:
            [0.1, 0.05, 0.01, 0.005]
          transformed_target_regressor__regressor__max_depth:
            [4, 6, 8]
          # transformed_target_regressor__regressor__n_estimators:
          #   [3000, 4000, 5000, 6000]
          transformed_target_regressor__regressor__subsample:
            [0.2, 0.5, 1.0]
        grid_search_cv_kwargs:
          cv: 5
        parameters:
          loss: ls
          # max_depth: 4
          min_samples_split: 2
          # learning_rate: 0.05
          n_estimators: 1000
        prediction_pp:
          mean: ['time']
          sum: ['latitude', 'longitude']
          units: 'Gt yr-1'
        use_coords_as_feature: ['month_number', 'latitude', 'longitude']
      evaluate_mlr_models:
        script: mlr/simple_multimodel_stats.py
        ancestors: ['diag_mlr/mlr']
        pattern: '*pp.nc'
        pattern_errors: '*pp_error_estim*'
        std: true
        unweighted_mean: true

  diag_mmm:
    description: Calculate simple multi-model mean of label data.
    variables:
      ref:
        <<: *variable_settings_ref
      label:
        <<: *variable_settings_label
    scripts:
      global_sum:
        script: mlr/simple_pp.py
        mean: ['time']
        sum: ['latitude', 'longitude']
        anomaly:
          matched_by: ['dataset']
        tag: GPP_change
        convert_units_to: 'Gt yr-1'
      mmm:
        script: mlr/simple_multimodel_stats.py
        ancestors: ['diag_mmm/global_sum']
        unweighted_mean: true
        std: true
